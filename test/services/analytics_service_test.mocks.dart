// Mocks generated by Mockito 5.4.4 from annotations
// in ngage/test/services/analytics_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:ngage/models/analytics.dart' as _i4;
import 'package:ngage/repositories/analytics_repository.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AnalyticsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAnalyticsRepository extends _i1.Mock
    implements _i2.AnalyticsRepository {
  MockAnalyticsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<Map<String, dynamic>> getMemberParticipationData({
    required String? groupId,
    required DateTime? startDate,
    required DateTime? endDate,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMemberParticipationData,
          [],
          {
            #groupId: groupId,
            #startDate: startDate,
            #endDate: endDate,
          },
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<Map<String, dynamic>> getTeamParticipationData({
    required String? groupId,
    required DateTime? startDate,
    required DateTime? endDate,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTeamParticipationData,
          [],
          {
            #groupId: groupId,
            #startDate: startDate,
            #endDate: endDate,
          },
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<Map<String, dynamic>> getEventParticipationData({
    required String? groupId,
    required DateTime? startDate,
    required DateTime? endDate,
    String? eventId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEventParticipationData,
          [],
          {
            #groupId: groupId,
            #startDate: startDate,
            #endDate: endDate,
            #eventId: eventId,
          },
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<Map<String, dynamic>> getSubmissionData({
    required String? groupId,
    required DateTime? startDate,
    required DateTime? endDate,
    String? eventId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSubmissionData,
          [],
          {
            #groupId: groupId,
            #startDate: startDate,
            #endDate: endDate,
            #eventId: eventId,
          },
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<Map<String, dynamic>> getJudgeActivityData({
    required String? groupId,
    required DateTime? startDate,
    required DateTime? endDate,
    String? eventId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getJudgeActivityData,
          [],
          {
            #groupId: groupId,
            #startDate: startDate,
            #endDate: endDate,
            #eventId: eventId,
          },
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<Map<String, dynamic>> getScoringData({
    required String? groupId,
    required DateTime? startDate,
    required DateTime? endDate,
    String? eventId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getScoringData,
          [],
          {
            #groupId: groupId,
            #startDate: startDate,
            #endDate: endDate,
            #eventId: eventId,
          },
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<Map<String, dynamic>> getJudgeCommentData({
    required String? groupId,
    required DateTime? startDate,
    required DateTime? endDate,
    String? eventId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getJudgeCommentData,
          [],
          {
            #groupId: groupId,
            #startDate: startDate,
            #endDate: endDate,
            #eventId: eventId,
          },
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<Map<String, dynamic>> getPostData({
    required String? groupId,
    required DateTime? startDate,
    required DateTime? endDate,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPostData,
          [],
          {
            #groupId: groupId,
            #startDate: startDate,
            #endDate: endDate,
          },
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<Map<String, dynamic>> getLikeData({
    required String? groupId,
    required DateTime? startDate,
    required DateTime? endDate,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLikeData,
          [],
          {
            #groupId: groupId,
            #startDate: startDate,
            #endDate: endDate,
          },
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<Map<String, dynamic>> getCommentData({
    required String? groupId,
    required DateTime? startDate,
    required DateTime? endDate,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCommentData,
          [],
          {
            #groupId: groupId,
            #startDate: startDate,
            #endDate: endDate,
          },
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<List<String>> getTopContributors({
    required String? groupId,
    required DateTime? startDate,
    required DateTime? endDate,
    int? limit = 10,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopContributors,
          [],
          {
            #groupId: groupId,
            #startDate: startDate,
            #endDate: endDate,
            #limit: limit,
          },
        ),
        returnValue: _i3.Future<List<String>>.value(<String>[]),
      ) as _i3.Future<List<String>>);

  @override
  _i3.Future<Map<String, double>> getEngagementByDay({
    required String? groupId,
    required DateTime? startDate,
    required DateTime? endDate,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEngagementByDay,
          [],
          {
            #groupId: groupId,
            #startDate: startDate,
            #endDate: endDate,
          },
        ),
        returnValue: _i3.Future<Map<String, double>>.value(<String, double>{}),
      ) as _i3.Future<Map<String, double>>);

  @override
  _i3.Future<void> storeAnalyticsMetrics(_i4.AnalyticsMetrics? metrics) =>
      (super.noSuchMethod(
        Invocation.method(
          #storeAnalyticsMetrics,
          [metrics],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> storeAnalyticsReport(_i4.AnalyticsReport? report) =>
      (super.noSuchMethod(
        Invocation.method(
          #storeAnalyticsReport,
          [report],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i4.AnalyticsMetrics>> getHistoricalMetrics({
    required String? groupId,
    required DateTime? startDate,
    required DateTime? endDate,
    _i4.AnalyticsPeriod? period = _i4.AnalyticsPeriod.monthly,
    String? eventId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getHistoricalMetrics,
          [],
          {
            #groupId: groupId,
            #startDate: startDate,
            #endDate: endDate,
            #period: period,
            #eventId: eventId,
          },
        ),
        returnValue: _i3.Future<List<_i4.AnalyticsMetrics>>.value(
            <_i4.AnalyticsMetrics>[]),
      ) as _i3.Future<List<_i4.AnalyticsMetrics>>);

  @override
  _i3.Future<List<_i4.AnalyticsReport>> getAnalyticsReports({
    List<String>? groupIds,
    DateTime? startDate,
    DateTime? endDate,
    String? generatedBy,
    int? limit = 50,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAnalyticsReports,
          [],
          {
            #groupIds: groupIds,
            #startDate: startDate,
            #endDate: endDate,
            #generatedBy: generatedBy,
            #limit: limit,
          },
        ),
        returnValue: _i3.Future<List<_i4.AnalyticsReport>>.value(
            <_i4.AnalyticsReport>[]),
      ) as _i3.Future<List<_i4.AnalyticsReport>>);
}
